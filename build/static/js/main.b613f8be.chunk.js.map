{"version":3,"sources":["part1.3/index.js","part2/PersonForm/PersonForm.js","part2/Button/Button.js","part2/Persons/Persons.js","part2/Filter/Filter.js","part2/Notification/Notification.js","part2/api/api.js","part2/index.js","index.js"],"names":["PersonForm","newName","newPhone","onNameChange","onPhoneChange","onSubmitHandler","onSubmit","value","onChange","type","Button","text","handler","onClick","Persons","currentPersons","deletePerson","map","pers","key","id","name","number","Filter","onSearchChange","Notification","isError","isShown","message","className","api","axios","create","baseURL","get","then","data","person","post","put","delete","catch","error","Part2","useState","persons","setPersons","setNewName","setNewPhone","setCurrentPersons","setIsError","isNotifShown","setIsNotifShown","setMessage","useEffect","res","showNotification","Promise","resolve","setTimeout","clearForm","event","searchText","target","filtredPersons","filter","toLowerCase","indexOf","preventDefault","some","window","confirm","personObj","p","resp","find","a","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b613f8be.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Panel from './Panel/Panel';\n\nconst anecdotes = [\n  {\n    id: 1,\n    text: 'If it hurts, do it more often',\n    votes: 0,\n  },\n  {\n    id: 2,\n    text: 'Adding manpower to a late software project makes it later!',\n    votes: 0,\n  },\n  {\n    id: 3,\n    text: 'The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.',\n    votes: 0,\n  },\n  {\n    id: 4,\n    text: 'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.',\n    votes: 0,\n  },\n  {\n    id: 5,\n    text: 'Premature optimization is the root of all evil.',\n    votes: 0,\n  },\n  {\n    id: 5,\n    text: 'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.',\n    votes: 0,\n  },\n];\n\nconst Part13 = () => {\n  const [anecs, setAnecs] = useState(anecdotes);\n  const [selected, setSelected] = useState(0);\n\n  const getRandomAnec = () => {\n    const randNum = Math.floor(Math.random() * anecdotes.length);\n    setSelected(randNum);\n  };\n\n  const addVoteToAnec = () => {\n    const newAnecObj = {\n      ...anecs[selected],\n      votes: anecs[selected].votes + 1,\n    };\n\n    setAnecs(anecs.map(anec => anec.id === newAnecObj.id ? newAnecObj : anec));\n  };\n\n  const getBestAnec = () => {\n    const maxVotes = Math.max(...anecs.map(anec => anec.votes));\n    return anecs.find(anec => anec.votes === maxVotes).text;\n  };\n\n  return (\n    <>\n      <h1>Anecdote of a day</h1>\n      <Panel anec={anecs[selected]} randomAnec={getRandomAnec} voteForAnec={addVoteToAnec}/>\n      <h1>Anecdote with most votes</h1>    \n      <p>{getBestAnec()}</p>\n    </>\n  )\n};\n\nexport default Part13;\n","import React from 'react';\n\nconst PersonForm = ({\n  newName,\n  newPhone,\n  onNameChange,\n  onPhoneChange,\n  onSubmitHandler,\n}) =>\n  <>\n    <h2>add new</h2>\n    <form onSubmit={onSubmitHandler}>\n      <div>\n        <span>name:</span>\n        <input value={newName} onChange={onNameChange} />\n      </div>\n      <div>\n        <span>phone:</span>\n        <input value={newPhone} onChange={onPhoneChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  </>\n\nexport default PersonForm;\n","import React from 'react';\n\nconst Button = ({text='click', handler}) => <button onClick={handler}>{text}</button>\n\nexport default Button;\n","import React from 'react';\nimport Button from '../Button/Button';\n\nconst Persons = ({currentPersons, deletePerson}) => {\n  return (\n    <>\n      <h2>Numbers</h2>\n      <ul>\n        { currentPersons.map(pers => \n          <li key={ pers.id }>\n            <p>{ pers.name }</p>\n            <p>{ pers.number }</p>\n            <Button text=\"delete\" handler={() => deletePerson(pers.id)}/>\n          </li>\n        )}\n      </ul>\n    </>\n  )\n}\n\nexport default Persons;\n","import React from 'react';\n\nconst Filter = ({onSearchChange}) => {\n  return (\n    <div>\n      <span>Search:</span>\n      <input onChange={ onSearchChange }/>\n    </div>\n  )\n}\n\nexport default Filter;\n","import React from 'react';\nimport './Notification.css';\n\nconst Notification = ({ isError, isShown, message }) => {\n  if (!isShown) return null;\n\n  return (\n    <div className={'notification ' + (isError ? 'notification_error' : 'notification_success')}>\n      {message}\n    </div>\n  );\n};\n\nexport default Notification;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: `/api/persons`,\n});\n\nexport default {\n  persons: () => api.get()\n    .then(({ data }) => data),\n\n  createPerson: (person) => api.post('', person)\n    .then(({data}) => data),\n\n  putPerson: (person) => api.put(`/${person.id}`, person)\n    .then(({data}) => data),\n    \n  deletePerson: (id) => api.delete(`/${id}`)\n    .then(({data}) => data)\n    .catch((error) => { throw error })\n};\n","import React, { useState, useEffect } from 'react';\nimport PersonForm from './PersonForm/PersonForm';\nimport Persons from './Persons/Persons';\nimport Filter from './Filter/Filter';\nimport Notification from './Notification/Notification';\nimport api from './api/api';\n\nconst Part2 = () => {\n  const [ persons, setPersons] = useState([]); \n  const [ newName, setNewName ] = useState('');\n  const [ newPhone, setNewPhone ] = useState('');\n  const [ currentPersons, setCurrentPersons ] = useState([...persons]);\n  const [ isError, setIsError ] = useState(false);\n  const [ isNotifShown, setIsNotifShown ] = useState(false);\n  const [ message, setMessage ] = useState('');\n\n  useEffect(() => {\n    api.persons().then((res) => setPersons([...res]));\n  }, []);\n\n  useEffect(() => {\n    setCurrentPersons([...persons]);\n  }, [persons]);\n\n  const showNotification = message => {\n    return new Promise(resolve => {\n      setMessage(message);\n      setIsNotifShown(true);\n      setTimeout(() => {\n        setIsNotifShown(false);\n        resolve();\n      }, 3000);\n    });\n  };\n\n  const checkName = () => {\n    return persons.some(pers => pers.name === newName);\n  };\n\n  const isChangePhone = () => {\n    return window.confirm(`Do you want to change number for ${newName}?`);\n  } \n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n\n    if (checkName()) {\n      if (isChangePhone()) {\n        const personObj = {\n          ...persons.filter(p => p.name === newName)[0],\n          number: newPhone,\n        };\n        api.putPerson(personObj)\n          .then(resp => {\n            setPersons(persons.map(p => p.id !== resp.id ? p : resp));\n            showNotification(`Changed ${newName}`);  \n          });\n      }\n    } else {\n      const newPerson = { name: newName, number: newPhone };\n      api.createPerson(newPerson)\n        .then(resp => {\n          setPersons([...persons, resp]);\n          showNotification(`Added ${newName}`);\n        });\n    }\n\n    clearForm();\n  };\n\n  const onNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const onPhoneChange = (event) => {\n    setNewPhone(event.target.value);\n  };\n\n  const onSearchChange = (event) => {\n    const searchText = event.target.value;\n\n    if (!searchText) {\n      setCurrentPersons([...persons]);\n      return;\n    }\n\n    const filtredPersons = persons\n      .filter(pers => pers.name.toLowerCase().indexOf(searchText.toLowerCase()) >= 0);\n    setCurrentPersons([...filtredPersons]);\n  };\n\n  const clearForm = () => {\n    setNewName('');\n    setNewPhone('');\n  }\n\n  const deletePerson = (id) => {\n    const answer = window.confirm(`Delete person with id ${id}?`)\n    if (answer) {\n      api.deletePerson(id)\n        .then(() => {\n          const name = persons.find(p => p.id === id).name;\n          setPersons(persons.filter(p => p.id !== id));\n          showNotification(`Deleted ${name}`);\n        })\n        .catch(async error => {\n          setIsError(true);\n          await showNotification(error.message);\n          setIsError(false);\n        });\n    } \n  };\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <Notification\n        isShown={isNotifShown} \n        isError={isError} \n        message={message}\n      />\n      <Filter onSearchChange={onSearchChange} />\n      <PersonForm\n        newName={newName}\n        newPhone={newPhone}\n        onNameChange={onNameChange}\n        onPhoneChange={onPhoneChange}\n        onSubmitHandler={onSubmitHandler}\n      />\n      <Persons\n        currentPersons={currentPersons} \n        deletePerson={deletePerson}  \n      />\n    </>\n  )\n};\n\nexport default Part2;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Part1 from './part1/index';\nimport Part12 from './part1.2/index';\nimport Part13 from './part1.3/index';\nimport Part2 from './part2/index';\nimport Part21 from './part2.1/index';\n\nReactDOM.render(<Part2 />, document.getElementById('root'));\n"],"sourceRoot":""}